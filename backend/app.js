const express = require('express');
const session = require('express-session');
const cors = require('cors');
const path = require('path');

function express_app(db) {  // export as function so that it can receive any specified database as a parameter, which will be utilized for database mocking 
    const app = express();
    app.use(cors());

    app.use(session({
        secret: 'secret',
        saveUninitialized: false,
        resave: false,
        cookie: {secure: false}
    }));
    app.use(express.json());
    app.use(express.urlencoded({ extended: true }));
    app.use(express.static(path.join(__dirname, 'static')));

    //the above setup by Eric

    app.get('/', function(request, response) {
        response.status(200).send('Home page successfully loaded.');
    });

    app.get('/loginstatus', (request, response) => {
        let username = request.session.username;
        let login = false;
        if(username != null) 
            login = true;
        response.send([username, login]);
    });

    app.post('/register', function(request, response) {
        let username = request.body.username;
        let password = request.body.password;

        if(username && password) {
            console.log(`Attempting to register user ${username}...`);
            db.registerUser(username, password, request, response);
            response.send({
                status: 'Registered user. (BACKEND)'
            });
        } else {
            response.status(400).send({
                status: 'Please enter username and password! (BACKEND)'
            });
            console.log('Please enter username and password (BACKEND)');
            response.end();
        }
    });

    app.post('/auth', function(request, response) { //authenticating user logins //done by Eric
        // Capture the input fields
        let username = request.body.username;
        let password = request.body.password;
        let login;
        let SID;

        // Ensure the input fields exists and are not empty
	    if (username && password) {
            console.log("Successfully obtained username and password");
		    //Execute SQL query that'll select the account from the database based on the specified username and the password generated by the SHA2-256 hash function
		    connection.query(`SELECT * FROM UserCredentials WHERE username = '${username}' AND password = SHA2('${password}', 256)`, function(error, results, fields) {
                // If there is an issue with the query, output the error
                if (error) throw error;
                
                // If the account exists
                if (request.session.loggedin == true) {
                    console.log("You are already logged in! (BACKEND)");
                    return response.send({
                        status: 'You are already logged in! (FROM BACKEND)',
                    });
                }
                if (results.length > 0) {
                    request.session.loggedin = true;
                    request.session.username = username;
                    login = request.session.loggedin;
                    SID = request.sessionID;
                    response.send({
                        status: 'Successfully logged in. (FROM BACKEND)',
                        login,
                        username
                    });
                    console.log("Successfully logged in.");
                    console.log(`Welcome back, ${request.session.username}!`);
                    response.end();
                } else {
                    response.send({
                        status: 'Incorrect Username and/or Password! (FROM BACKEND)',
                    });
                    console.log("Incorrect Username and/or Password! (BACKEND)");
                }			
                response.end();
		    });
        } else {
            response.send({
                status: 'Please enter Username and Password! (FROM BACKEND)'
            });
            console.log("Please enter Username and Password! (BACKEND)");
            response.end();
        }
    });
    
    return app;
}

module.exports = express_app;